{"version":3,"sources":["Components/PostListPage.js","Components/CreateProduct.jsx","App.js","reportWebVitals.js","index.js"],"names":["PostListPage","Product","setProducts","useState","useEffect","axios","get","then","response","data","catch","error","console","log","React","createElement","map","product","key","id","name","price","stock","description","CreatePostPage","title","setTitle","content","setContent","onSubmit","async","e","preventDefault","post","htmlFor","type","value","onChange","target","required","App","Router","Routes","Route","path","Component","CreateProduct","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"6NA6BeA,MA1Bf,WACI,MAAOC,EAASC,GAAeC,mBAAS,IAQxC,OANAC,oBAAU,KACNC,IAAMC,IAAI,cACLC,KAAKC,GAAWN,EAAYM,EAASC,OACrCC,MAAMC,GAASC,QAAQC,IAAIF,KAC9B,IAGFG,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAI,aACJD,IAAAC,cAAA,UACKd,EAAQe,IAAKC,GACVH,IAAAC,cAAA,MAAIG,IAAKD,EAAQE,IACbL,IAAAC,cAAA,UAAKE,EAAQG,MACbN,IAAAC,cAAA,SAAG,UAAQE,EAAQI,OACnBP,IAAAC,cAAA,SAAG,UAAQE,EAAQK,OACnBR,IAAAC,cAAA,SAAG,gBAAcE,EAAQM,kBC0BlCC,MA5CQA,KACnB,MAAOC,EAAOC,GAAYvB,mBAAS,KAC5BwB,EAASC,GAAczB,mBAAS,IAavC,OACIW,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAI,eACJD,IAAAC,cAAA,QAAMc,SAdOC,UACjBC,EAAEC,iBACF,UACU3B,IAAM4B,KAAK,aAAc,CAAER,QAAOE,YAG1C,MAAOhB,GACLC,QAAQD,MAAM,uBAAwBA,MAQlCG,IAAAC,cAAA,WACID,IAAAC,cAAA,SAAOmB,QAAQ,SAAQ,UACvBpB,IAAAC,cAAA,SACIoB,KAAK,OACLhB,GAAG,QACHiB,MAAOX,EACPY,SAAWN,GAAML,EAASK,EAAEO,OAAOF,OACnCG,UAAQ,KAGhBzB,IAAAC,cAAA,WACID,IAAAC,cAAA,SAAOmB,QAAQ,WAAU,YACzBpB,IAAAC,cAAA,YACII,GAAG,UACHiB,MAAOT,EACPU,SAAWN,GAAMH,EAAWG,EAAEO,OAAOF,OACrCG,UAAQ,KAGhBzB,IAAAC,cAAA,UAAQoB,KAAK,UAAS,kBCrBvBK,MAZf,WAEI,OACQ1B,IAAAC,cAAC0B,IAAM,KACH3B,IAAAC,cAAC2B,IAAM,KACH5B,IAAAC,cAAC4B,IAAK,CAACC,KAAM,aAAcC,UAAW7C,IACtCc,IAAAC,cAAC4B,IAAK,CAACC,KAAM,IAAKC,UAAWC,OCFlCC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAnB,EAAA,GAAAxB,KAAA2C,EAAAC,KAAA,UAAqB5C,KAAK6C,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCADU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHhD,IAAAC,cAACD,IAAMiD,WAAU,KACfjD,IAAAC,cAACyB,EAAG,QAORO","file":"static/js/main.010a29a3.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction PostListPage(){\r\n    const [Product, setProducts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('/api/posts')\r\n            .then(response =>setProducts(response.data))\r\n            .catch(error => console.log(error))\r\n        },[]);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Post List</h1>\r\n            <ul>\r\n                {Product.map((product) => (\r\n                    <li key={product.id}>\r\n                        <h2>{product.name}</h2>\r\n                        <p>Price: {product.price}</p>\r\n                        <p>Stock: {product.stock}</p>\r\n                        <p>Description: {product.description}</p>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostListPage;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CreatePostPage = () => {\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.post('/api/posts', { title, content });\r\n            // 작성 후 목록 페이지로 이동 등의 추가 로직 작성\r\n\r\n        } catch (error) {\r\n            console.error('Error creating post:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Create Post</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label htmlFor=\"title\">Title:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"title\"\r\n                        value={title}\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"content\">Content:</label>\r\n                    <textarea\r\n                        id=\"content\"\r\n                        value={content}\r\n                        onChange={(e) => setContent(e.target.value)}\r\n                        required\r\n                    ></textarea>\r\n                </div>\r\n                <button type=\"submit\">Create Post</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreatePostPage;\r\n","// src/main/frontend/src/App.js\r\n\r\nimport React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport {BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport PostListPage from \"./Components/PostListPage\";\r\nimport CreateProduct from \"./Components/CreateProduct\";\r\n\r\nfunction App() {\r\n\r\n    return (\r\n            <Router>\r\n                <Routes>\r\n                    <Route path={\"/api/posts\"} Component={PostListPage}></Route>\r\n                    <Route path={\"/\"} Component={CreateProduct}></Route>\r\n                </Routes>\r\n            </Router>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}