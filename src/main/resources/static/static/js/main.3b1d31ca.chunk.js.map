{"version":3,"sources":["Components/CreateProduct.js","Components/PostListPage.js","App.js","reportWebVitals.js","index.js"],"names":["CreatePostPage","name","setName","useState","price","setPrice","stock","setStock","description","setDescription","navigate","useNavigate","React","createElement","onSubmit","async","e","preventDefault","axios","post","error","console","type","value","onChange","target","required","PostListPage","Product","setProducts","useEffect","get","then","response","data","catch","log","map","product","key","id","App","Router","Routes","Route","path","element","CreateProduct","Link","to","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"4NAwEeA,MApEQA,KACnB,MAAOC,EAAMC,GAAWC,mBAAS,KAC1BC,EAAOC,GAAYF,mBAAS,KAC5BG,EAAOC,GAAYJ,mBAAS,KAC5BK,EAAaC,GAAkBN,mBAAS,IACzCO,EAAWC,cAajB,OACIC,IAAAC,cAAA,QAAMC,SAZWC,UACjBC,EAAEC,iBACF,UACUC,IAAMC,KAAK,aAAc,CAAElB,OAAMG,QAAOE,QAAOE,gBAErDE,EAAS,KACX,MAAOU,GACLC,QAAQD,MAAM,uBAAwBA,MAMtCR,IAAAC,cAAA,WACID,IAAAC,cAAA,aAAO,QAEHD,IAAAC,cAAA,SACIS,KAAK,OACLC,MAAOtB,EACPuB,SAAWR,GAAMd,EAAQc,EAAES,OAAOF,OAClCG,UAAQ,MAIpBd,IAAAC,cAAA,WACID,IAAAC,cAAA,aAAO,SAEHD,IAAAC,cAAA,SACIS,KAAK,SACLC,MAAOnB,EACPoB,SAAWR,GAAMX,EAASW,EAAES,OAAOF,OACnCG,UAAQ,MAIpBd,IAAAC,cAAA,WACID,IAAAC,cAAA,aAAO,SAEHD,IAAAC,cAAA,SACIS,KAAK,SACLC,MAAOjB,EACPkB,SAAWR,GAAMT,EAASS,EAAES,OAAOF,OACnCG,UAAQ,MAIpBd,IAAAC,cAAA,WACID,IAAAC,cAAA,aAAO,eAEHD,IAAAC,cAAA,YACIU,MAAOf,EACPgB,SAAWR,GAAMP,EAAeO,EAAES,OAAOF,OACzCG,UAAQ,MAIpBd,IAAAC,cAAA,UAAQS,KAAK,UAAS,YC1BnBK,MAtCf,WACI,MAAOC,EAASC,GAAe1B,mBAAS,IAQxC,OANA2B,oBAAU,KACNZ,IAAMa,IAAI,cACLC,KAAKC,GAAWJ,EAAYI,EAASC,OACrCC,MAAMf,GAASC,QAAQe,IAAIhB,KAC9B,IAGFR,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,aACID,IAAAC,cAAA,aACAD,IAAAC,cAAA,UACID,IAAAC,cAAA,UAAI,MACJD,IAAAC,cAAA,UAAI,QACJD,IAAAC,cAAA,UAAI,SACJD,IAAAC,cAAA,UAAI,SACJD,IAAAC,cAAA,UAAI,iBAGRD,IAAAC,cAAA,aACCe,EAAQS,IAAKC,GACV1B,IAAAC,cAAA,MAAI0B,IAAKD,EAAQE,IACb5B,IAAAC,cAAA,UAAKyB,EAAQE,IACb5B,IAAAC,cAAA,UAAKyB,EAAQrC,MACbW,IAAAC,cAAA,UAAKyB,EAAQlC,OACbQ,IAAAC,cAAA,UAAKyB,EAAQhC,OACbM,IAAAC,cAAA,UAAKyB,EAAQ9B,mBCJtBiC,MAff,WAEI,OACI7B,IAAAC,cAAC6B,IAAM,KACH9B,IAAAC,cAAC8B,IAAM,KACH/B,IAAAC,cAAC+B,IAAK,CAACC,KAAM,IAAKC,QAASlC,IAAAC,cAACc,EAAY,QACxCf,IAAAC,cAAC+B,IAAK,CAACC,KAAM,SAAUC,QAASlC,IAAAC,cAACkC,EAAa,SAElDnC,IAAAC,cAAA,WACAD,IAAAC,cAACmC,IAAI,CAACC,GAAI,UAAU,wBCVjBC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAArC,EAAA,GAAAgB,KAAAqB,EAAAC,KAAA,UAAqBtB,KAAKuB,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCADU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHrD,IAAAC,cAACD,IAAMsD,WAAU,KACftD,IAAAC,cAAC4B,EAAG,QAORS","file":"static/js/main.3b1d31ca.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom'; // useHistory 대신 useNavigate를 사용합니다.\r\n\r\nconst CreatePostPage = () => {\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [stock, setStock] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const navigate = useNavigate(); // useNavigate 훅을 사용하여 navigate 함수 생성\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.post('/api/posts', { name, price, stock, description });\r\n            // 작성 후 목록 페이지로 이동 등의 추가 로직 작성\r\n            navigate('/');\r\n        } catch (error) {\r\n            console.error('Error creating post:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <label>\r\n                    Name:\r\n                    <input\r\n                        type=\"text\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        required\r\n                    />\r\n                </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    Price:\r\n                    <input\r\n                        type=\"number\"\r\n                        value={price}\r\n                        onChange={(e) => setPrice(e.target.value)}\r\n                        required\r\n                    />\r\n                </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    Stock:\r\n                    <input\r\n                        type=\"number\"\r\n                        value={stock}\r\n                        onChange={(e) => setStock(e.target.value)}\r\n                        required\r\n                    />\r\n                </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    Description:\r\n                    <textarea\r\n                        value={description}\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                        required\r\n                    />\r\n                </label>\r\n            </div>\r\n            <button type=\"submit\">Submit</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default CreatePostPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction PostListPage(){\r\n    const [Product, setProducts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('/api/posts')\r\n            .then(response =>setProducts(response.data))\r\n            .catch(error => console.log(error))\r\n        },[]);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Product</h1>\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>Name</th>\r\n                    <th>Price</th>\r\n                    <th>Stock</th>\r\n                    <th>Description</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {Product.map((product) => (\r\n                    <tr key={product.id}>\r\n                        <td>{product.id}</td>\r\n                        <td>{product.name}</td>\r\n                        <td>{product.price}</td>\r\n                        <td>{product.stock}</td>\r\n                        <td>{product.description}</td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostListPage;\r\n","// src/main/frontend/src/App.js\r\n\r\nimport React  from 'react';\r\nimport axios from 'axios';\r\nimport {BrowserRouter as Router, Link, Route, Routes} from 'react-router-dom';\r\nimport CreateProduct from \"./Components/CreateProduct\";\r\nimport New  from \"./Components/new\";\r\nimport RouteTest from \"./Components/RouteTest\";\r\nimport Deeee from \"./Components/deeee\";\r\nimport CreateProduct1 from \"./Components/CreateProduct1\";\r\nimport PostListPage from \"./Components/PostListPage\";\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <Router>\r\n            <Routes>\r\n                <Route path={\"/\"} element={<PostListPage/>}/>\r\n                <Route path={\"/posts\"} element={<CreateProduct/>}/>\r\n            </Routes>\r\n            <br/>\r\n            <Link to={'/posts'}>글작성</Link>\r\n\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}